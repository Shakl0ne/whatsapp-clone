{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\93480\\\\WebstormProjects\\\\whatsapp_clone\\\\client\\\\src\\\\contexts\\\\ConversationsProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { useContacts } from \"./ContactsProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationsContext = /*#__PURE__*/React.createContext();\nexport function useConversations() {\n  _s();\n  return useContext(ConversationsContext);\n}\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function ConversationsProvider(_ref) {\n  _s2();\n  let {\n    id,\n    children\n  } = _ref;\n  const [conversations, setConversations] = useLocalStorage(\"conversations\", []);\n  const {\n    contacts\n  } = useContacts();\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0);\n  function createConversation(recipients) {\n    setConversations(prevConversations => {\n      return [...prevConversations, {\n        recipients,\n        message: []\n      }];\n    });\n  }\n  function addMessageToConversation(_ref2) {\n    let {\n      recipients,\n      text,\n      sender\n    } = _ref2;\n  }\n  function sendMessage(recipients, text) {\n    addMessageToConversation({\n      recipients,\n      text,\n      sender: id\n    });\n  }\n  const formattedConversations = conversations === null || conversations === void 0 ? void 0 : conversations.map((conversation, index) => {\n    var _conversation$recipie;\n    const recipients = (_conversation$recipie = conversation.recipients) === null || _conversation$recipie === void 0 ? void 0 : _conversation$recipie.map(recipient => {\n      const contact = contacts.find(contact => {\n        return contact.id === recipient;\n      });\n      const name = contact && contact.name || recipient;\n      return {\n        id: recipient,\n        name\n      };\n    });\n    const selected = index === selectedConversationIndex;\n    return {\n      ...conversation,\n      recipients,\n      selected\n    };\n  });\n  const value = {\n    conversations: formattedConversations,\n    selectedConversation: formattedConversations[selectedConversationIndex],\n    selectConversationIndex: setSelectedConversationIndex,\n    createConversation\n  };\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s2(ConversationsProvider, \"LH8M3IpdqifhWTezXH3IG1Gu5e0=\", false, function () {\n  return [useLocalStorage, useContacts];\n});\n_c = ConversationsProvider;\nvar _c;\n$RefreshReg$(_c, \"ConversationsProvider\");","map":{"version":3,"names":["React","useContext","useState","useLocalStorage","useContacts","ConversationsContext","createContext","useConversations","ConversationsProvider","id","children","conversations","setConversations","contacts","selectedConversationIndex","setSelectedConversationIndex","createConversation","recipients","prevConversations","message","addMessageToConversation","text","sender","sendMessage","formattedConversations","map","conversation","index","recipient","contact","find","name","selected","value","selectedConversation","selectConversationIndex"],"sources":["C:/Users/93480/WebstormProjects/whatsapp_clone/client/src/contexts/ConversationsProvider.js"],"sourcesContent":["import React, {useContext, useState} from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { useContacts } from \"./ContactsProvider\";\n\nconst ConversationsContext = React.createContext();\n\nexport function useConversations() {\n  return useContext(ConversationsContext)\n}\nexport function ConversationsProvider({ id, children }) {\n  const [conversations, setConversations] = useLocalStorage(\"conversations\", []);\n  const { contacts } = useContacts()\n  const [ selectedConversationIndex, setSelectedConversationIndex ] = useState(0)\n  function createConversation(recipients) {\n    setConversations(prevConversations => {\n      return [...prevConversations, { recipients, message: [] }];\n    });\n  }\n\n  function addMessageToConversation( {recipients, text, sender} ) {\n\n  }\n  function sendMessage(recipients, text) {\n    addMessageToConversation( {recipients, text, sender:id})\n  }\n\n  const formattedConversations = conversations?.map((conversation, index) => {\n    const recipients = conversation.recipients?.map(recipient => {\n      const contact = contacts.find(contact => {\n        return contact.id === recipient\n      })\n      const name = (contact && contact.name) || recipient\n      return { id: recipient, name }\n    })\n    const selected = index === selectedConversationIndex\n    return {...conversation, recipients, selected}\n  })\n\n  const value = {\n    conversations: formattedConversations,\n    selectedConversation: formattedConversations[selectedConversationIndex],\n    selectConversationIndex: setSelectedConversationIndex,\n    createConversation\n  }\n  return (\n    <ConversationsContext.Provider value={value}>\n      {children}\n    </ConversationsContext.Provider>\n  );\n}\n\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,WAAW,QAAQ,oBAAoB;AAAC;AAEjD,MAAMC,oBAAoB,gBAAGL,KAAK,CAACM,aAAa,EAAE;AAElD,OAAO,SAASC,gBAAgB,GAAG;EAAA;EACjC,OAAON,UAAU,CAACI,oBAAoB,CAAC;AACzC;AAAC,GAFeE,gBAAgB;AAGhC,OAAO,SAASC,qBAAqB,OAAmB;EAAA;EAAA,IAAlB;IAAEC,EAAE;IAAEC;EAAS,CAAC;EACpD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,eAAe,CAAC,eAAe,EAAE,EAAE,CAAC;EAC9E,MAAM;IAAEU;EAAS,CAAC,GAAGT,WAAW,EAAE;EAClC,MAAM,CAAEU,yBAAyB,EAAEC,4BAA4B,CAAE,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC/E,SAASc,kBAAkB,CAACC,UAAU,EAAE;IACtCL,gBAAgB,CAACM,iBAAiB,IAAI;MACpC,OAAO,CAAC,GAAGA,iBAAiB,EAAE;QAAED,UAAU;QAAEE,OAAO,EAAE;MAAG,CAAC,CAAC;IAC5D,CAAC,CAAC;EACJ;EAEA,SAASC,wBAAwB,QAA+B;IAAA,IAA7B;MAACH,UAAU;MAAEI,IAAI;MAAEC;IAAM,CAAC;EAE7D;EACA,SAASC,WAAW,CAACN,UAAU,EAAEI,IAAI,EAAE;IACrCD,wBAAwB,CAAE;MAACH,UAAU;MAAEI,IAAI;MAAEC,MAAM,EAACb;IAAE,CAAC,CAAC;EAC1D;EAEA,MAAMe,sBAAsB,GAAGb,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEc,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,KAAK;IAAA;IACzE,MAAMV,UAAU,4BAAGS,YAAY,CAACT,UAAU,0DAAvB,sBAAyBQ,GAAG,CAACG,SAAS,IAAI;MAC3D,MAAMC,OAAO,GAAGhB,QAAQ,CAACiB,IAAI,CAACD,OAAO,IAAI;QACvC,OAAOA,OAAO,CAACpB,EAAE,KAAKmB,SAAS;MACjC,CAAC,CAAC;MACF,MAAMG,IAAI,GAAIF,OAAO,IAAIA,OAAO,CAACE,IAAI,IAAKH,SAAS;MACnD,OAAO;QAAEnB,EAAE,EAAEmB,SAAS;QAAEG;MAAK,CAAC;IAChC,CAAC,CAAC;IACF,MAAMC,QAAQ,GAAGL,KAAK,KAAKb,yBAAyB;IACpD,OAAO;MAAC,GAAGY,YAAY;MAAET,UAAU;MAAEe;IAAQ,CAAC;EAChD,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAG;IACZtB,aAAa,EAAEa,sBAAsB;IACrCU,oBAAoB,EAAEV,sBAAsB,CAACV,yBAAyB,CAAC;IACvEqB,uBAAuB,EAAEpB,4BAA4B;IACrDC;EACF,CAAC;EACD,oBACE,QAAC,oBAAoB,CAAC,QAAQ;IAAC,KAAK,EAAEiB,KAAM;IAAA,UACzCvB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACqB;AAEpC;AAAC,IAxCeF,qBAAqB;EAAA,QACOL,eAAe,EACpCC,WAAW;AAAA;AAAA,KAFlBI,qBAAqB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}